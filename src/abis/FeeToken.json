{
  "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IConfig",
          "name": "_config",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "config",
      "outputs": [
        {
          "internalType": "contract IConfig",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbe508072b8e87517ed0287d35ea34766a3b102530bedf4ebe4ababb8cb650563",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9A676e781A523b5d0C0e43731313A708CB607508",
    "transactionIndex": 0,
    "gasUsed": "380754",
    "logsBloom": "0x
    "blockHash": "0xbb44525794a560f99e085eb30e8033583cd2e682ce19a935b6b996de5bbd0c29",
    "transactionHash": "0xbe508072b8e87517ed0287d35ea34766a3b102530bedf4ebe4ababb8cb650563",
    "logs": [],
    "blockNumber": 15,
    "cumulativeGasUsed": "380754",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "solcInputHash": "140b184ea212973259cc7f2e35ce1b61",
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IConfig\",\"name\":\"_config\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"config\",\"outputs\":[{\"internalType\":\"contract IConfig\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/FeeToken.sol\":\"FeeToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\"},\"src/FeeToken.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/IFee.sol\\\";\\nimport \\\"./interfaces/IFreeFee.sol\\\";\\nimport \\\"./interfaces/IConfig.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n */\\nabstract contract AbstractToken is IERC20 {\\n    string public name;\\n    string public symbol;\\n    uint8 public decimals = 18;\\n    IConfig public config;\\n\\n    constructor(\\n        IConfig _config,\\n        string memory _name,\\n        string memory _symbol\\n    ) public {\\n        config = _config;\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    function totalSupply() public view override returns (uint256) {\\n        return 0;\\n    }\\n\\n    function balanceOf(address) public view virtual override returns (uint256) {\\n        return 0;\\n    }\\n\\n    function transfer(address, uint256) public virtual override returns (bool) {\\n        revert();\\n    }\\n\\n    function allowance(address, address) public view virtual override returns (uint256) {\\n        return 0;\\n    }\\n\\n    function approve(address, uint256) public virtual override returns (bool) {\\n        revert();\\n    }\\n\\n    function transferFrom(\\n        address,\\n        address,\\n        uint256\\n    ) public virtual override returns (bool) {\\n        revert();\\n    }\\n}\\n\\ncontract FeeToken is AbstractToken {\\n    constructor(IConfig _config) public AbstractToken(_config, \\\"Fee\\\", \\\"Fee\\\") {}\\n\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return IFee(config.fee()).estimateFee(account, block.timestamp);\\n    }\\n}\\n\\ncontract FreeFeeToken is AbstractToken {\\n    constructor(IConfig _config) public AbstractToken(_config, \\\"FreeFee\\\", \\\"FreeFee\\\") {}\\n\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return IFreeFee(config.freeFee()).estimateFreeFee(account, block.timestamp);\\n    }\\n}\\n\",\"keccak256\":\"0x5c2d6b5ac4d568ce245f6ef0efa90ac8f6e83a7181b9ec0ca7fb04612bd8734d\"},\"src/interfaces/IConfig.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev see {Config}\\n */\\ninterface IConfig {\\n    function stakeManager() external view returns (address);\\n\\n    function systemCaller() external view returns (address);\\n\\n    function unstakePool() external view returns (address);\\n\\n    function validatorRewardPool() external view returns (address);\\n\\n    function fee() external view returns (address);\\n\\n    function freeFee() external view returns (address);\\n\\n    function feePool() external view returns (address);\\n\\n    function router() external view returns (address);\\n\\n    function contractFee() external view returns (address);\\n\\n    function unstakeDelay() external view returns (uint256);\\n\\n    function withdrawDelay() external view returns (uint256);\\n\\n    function dailyFee() external view returns (uint256);\\n\\n    function dailyFreeFee() external view returns (uint256);\\n\\n    function userFreeFeeLimit() external view returns (uint256);\\n\\n    function feeRecoverInterval() external view returns (uint256);\\n\\n    function freeFeeRecoverInterval() external view returns (uint256);\\n\\n    function feePoolLiquidateInterval() external view returns (uint256);\\n\\n    function minIndexVotingPower() external view returns (uint256);\\n\\n    function getFactorByReason(uint8 reason) external view returns (uint8);\\n\\n    function setCommissionRateInterval() external view returns (uint256);\\n\\n    function minerRewardFactor() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xa9ae74ba454e5c3b9d0847d251b3cd90171cbfb106df2462f84d73a5dbcac053\"},\"src/interfaces/IFee.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity ^0.6.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./IOnly.sol\\\";\\n\\n/**\\n * @dev see {Fee}\\n */\\ninterface IFee is IOnly {\\n    /**\\n     * @dev `DepositInfo` records the information about deposit.\\n     */\\n    struct DepositInfo {\\n        uint256 amount;\\n        uint256 timestamp;\\n    }\\n\\n    /**\\n     * @dev `DepositInfo` records the information about usage.\\n     *      If the timestamp interval is less than `feeRecoverInterval`, the usage will accumulate,\\n     *      Otherwise it will be cleared\\n     */\\n    struct UsageInfo {\\n        uint256 usage;\\n        uint256 timestamp;\\n    }\\n\\n    function userTotalAmount(address user) external view returns (uint256);\\n\\n    function userUsage(address user) external view returns (uint256, uint256);\\n\\n    function userDeposit(address user1, address user2) external view returns (uint256, uint256);\\n\\n    function totalAmount() external view returns (uint256);\\n\\n    function deposit(address user) external payable;\\n\\n    function withdraw(\\n        address user,\\n        uint256 desiredAmount,\\n        uint256 minAmount\\n    ) external;\\n\\n    function estimateWithdrawableTimestamp(address user, address from) external view returns (uint256);\\n\\n    function estimateWithdrawableAmount(address user, uint256 timestamp) external view returns (uint256);\\n\\n    function estimateFee(address user, uint256 timestamp) external view returns (uint256);\\n\\n    function estimateUsage(UsageInfo calldata ui, uint256 timestamp) external view returns (uint256);\\n\\n    function consume(address user, uint256 usage) external;\\n}\\n\",\"keccak256\":\"0x4d6ef2139cbf2fca1babeab9e77897f5d07ba1b54e7094921265f31aab5ee683\"},\"src/interfaces/IFreeFee.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity ^0.6.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./IOnly.sol\\\";\\n\\n/**\\n * @dev see {FreeFee}\\n */\\ninterface IFreeFee is IOnly {\\n    struct UsageInfo {\\n        uint256 usage;\\n        uint256 timestamp;\\n    }\\n\\n    function userUsage(address) external view returns (uint256, uint256);\\n\\n    function totalUsage() external view returns (uint256);\\n\\n    function globalTimestamp() external view returns (uint256);\\n\\n    function estimateTotalLeft(uint256 timestamp) external view returns (uint256);\\n\\n    function estimateUsage(UsageInfo calldata ui, uint256 timestamp) external view returns (uint256);\\n\\n    function estimateFreeFee(address user, uint256 timestamp) external view returns (uint256);\\n\\n    function consume(address user, uint256 usage) external;\\n\\n    function onAfterBlock() external;\\n}\\n\",\"keccak256\":\"0x7ad3494b1798b2769b927110b812ab2f91dbe1532b5304371d9c2d472ea0a447\"},\"src/interfaces/IOnly.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./IConfig.sol\\\";\\n\\ninterface IOnly {\\n    function config() external view returns (IConfig);\\n}\\n\",\"keccak256\":\"0x091ba53f009ccd75749a6d1453ef05e9071607991e1e7a85ba3f4b6d97e514fb\"}},\"version\":1}",
  "bytecode": "0x60806040526002805460ff1916601217905534801561001d57600080fd5b506040516106023803806106028339818101604052602081101561004057600080fd5b505160408051808201825260038082526246656560e81b6020808401828152855180870190965292855284015260028054610100600160a81b0319166101006001600160a01b03871602179055815184939161009f91600091906100bd565b5080516100b39060019060208401906100bd565b5050505050610158565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100fe57805160ff191683800117855561012b565b8280016001018555821561012b579182015b8281111561012b578251825591602001919060010190610110565b5061013792915061013b565b5090565b61015591905b808211156101375760008155600101610141565b90565b61049b806101676000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a08231146101ce57806379502c55146101f457806395d89b4114610218578063a9059cbb14610120578063dd62ed3e146102205761009e565b806306fdde03146100a3578063095ea7b31461012057806318160ddd1461016057806323b872dd1461017a578063313ce567146101b0575b600080fd5b6100ab61024e565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e55781810151838201526020016100cd565b50505050905090810190601f1680156101125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61014c6004803603604081101561013657600080fd5b506001600160a01b0381351690602001356102dc565b604080519115158252519081900360200190f35b6101686102e3565b60408051918252519081900360200190f35b61014c6004803603606081101561019057600080fd5b506001600160a01b038135811691602081013590911690604001356102dc565b6101b86102e8565b6040805160ff9092168252519081900360200190f35b610168600480360360208110156101e457600080fd5b50356001600160a01b03166102f1565b6101fc6103ef565b604080516001600160a01b039092168252519081900360200190f35b6100ab610403565b6101686004803603604081101561023657600080fd5b506001600160a01b038135811691602001351661045d565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102d45780601f106102a9576101008083540402835291602001916102d4565b820191906000526020600020905b8154815290600101906020018083116102b757829003601f168201915b505050505081565b6000806000fd5b600090565b60025460ff1681565b6000600260019054906101000a90046001600160a01b03166001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b15801561034157600080fd5b505afa158015610355573d6000803e3d6000fd5b505050506040513d602081101561036b57600080fd5b5051604080516317e33f1560e01b81526001600160a01b038581166004830152426024830152915191909216916317e33f15916044808301926020929190829003018186803b1580156103bd57600080fd5b505afa1580156103d1573d6000803e3d6000fd5b505050506040513d60208110156103e757600080fd5b505192915050565b60025461010090046001600160a01b031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102d45780601f106102a9576101008083540402835291602001916102d4565b60009291505056fea26469706673582212200324dbe19c68dc1600ff8e8ffe212f9949073d1242d577ca34bfbb4a0fa0d99664736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a08231146101ce57806379502c55146101f457806395d89b4114610218578063a9059cbb14610120578063dd62ed3e146102205761009e565b806306fdde03146100a3578063095ea7b31461012057806318160ddd1461016057806323b872dd1461017a578063313ce567146101b0575b600080fd5b6100ab61024e565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e55781810151838201526020016100cd565b50505050905090810190601f1680156101125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61014c6004803603604081101561013657600080fd5b506001600160a01b0381351690602001356102dc565b604080519115158252519081900360200190f35b6101686102e3565b60408051918252519081900360200190f35b61014c6004803603606081101561019057600080fd5b506001600160a01b038135811691602081013590911690604001356102dc565b6101b86102e8565b6040805160ff9092168252519081900360200190f35b610168600480360360208110156101e457600080fd5b50356001600160a01b03166102f1565b6101fc6103ef565b604080516001600160a01b039092168252519081900360200190f35b6100ab610403565b6101686004803603604081101561023657600080fd5b506001600160a01b038135811691602001351661045d565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102d45780601f106102a9576101008083540402835291602001916102d4565b820191906000526020600020905b8154815290600101906020018083116102b757829003601f168201915b505050505081565b6000806000fd5b600090565b60025460ff1681565b6000600260019054906101000a90046001600160a01b03166001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b15801561034157600080fd5b505afa158015610355573d6000803e3d6000fd5b505050506040513d602081101561036b57600080fd5b5051604080516317e33f1560e01b81526001600160a01b038581166004830152426024830152915191909216916317e33f15916044808301926020929190829003018186803b1580156103bd57600080fd5b505afa1580156103d1573d6000803e3d6000fd5b505050506040513d60208110156103e757600080fd5b505192915050565b60025461010090046001600160a01b031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102d45780601f106102a9576101008083540402835291602001916102d4565b60009291505056fea26469706673582212200324dbe19c68dc1600ff8e8ffe212f9949073d1242d577ca34bfbb4a0fa0d99664736f6c63430006020033",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3305,
        "contract": "src/FeeToken.sol:FeeToken",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 3307,
        "contract": "src/FeeToken.sol:FeeToken",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 3310,
        "contract": "src/FeeToken.sol:FeeToken",
        "label": "decimals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 3312,
        "contract": "src/FeeToken.sol:FeeToken",
        "label": "config",
        "offset": 1,
        "slot": "2",
        "type": "t_contract(IConfig)6296"
      }
    ],
    "types": {
      "t_contract(IConfig)6296": {
        "encoding": "inplace",
        "label": "contract IConfig",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}